/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.22
 * Generated at: 2020-10-01 21:19:32 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\">\r\n");
      out.write("<title>Cadastro de Produtos</title>\r\n");
      out.write("\r\n");
      out.write("<!-- CSS only -->\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css\" >\r\n");
      out.write("\r\n");
      out.write("<!-- JS, Popper.js, and jQuery -->\r\n");
      out.write("<src=\"https://code.jquery.com/jquery-3.5.1.slim.min.js\" ></>\r\n");
      out.write("<src=\"https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js\"></>\r\n");
      out.write("<src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js\"></>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("\t<h1 class=\"text-center bg-dark text-white p-5\">Produtos Xing Ling</h1>\r\n");
      out.write("\r\n");
      out.write("\t<div class=\"container\">\r\n");
      out.write("\t\r\n");
      out.write("\t<div class=\"card col-md-6 offset-md-3 mt-5 shadow border-dark\">\r\n");
      out.write("\t\t<div class=\"card-header\">\r\n");
      out.write("\t\t\t<h3>Cadastro de Produtos</h3>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div class=\"card-body\">\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<form role=\"form\">\r\n");
      out.write("\t\t\t\t\t<label for='idProduto'>Id do Produto</label><br> <input\r\n");
      out.write("\t\t\t\t\t\ttype=\"number\" name=\"idProduto\" id=\"idProduto\"\r\n");
      out.write("\t\t\t\t\t\tplaceholder=\"Digite o Id do produto\" required=\"required\"\r\n");
      out.write("\t\t\t\t\t\tclass=\"form-control\">\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\t\t<label for='nome'>Nome do Produto:</label><br> <input type=\"text\"\r\n");
      out.write("\t\t\t\t\t\tname=\"nome\" id=\"nome\" placeholder=\"Digite o Nome do produto\"\r\n");
      out.write("\t\t\t\t\t\trequired=\"required\" class=\"form-control\"> \r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t<label for='descricao'>Descricao\r\n");
      out.write("\t\t\t\t\t\tdo Produto</label><br> <input type=\"text\" name=\"descricao\"\r\n");
      out.write("\t\t\t\t\t\tid=\"descricao\" placeholder=\"Digite uma descricao para o produto\"\r\n");
      out.write("\t\t\t\t\t\trequired=\"required\" class=\"form-control\"> \r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t<label for='preco'>Preço\r\n");
      out.write("\t\t\t\t\t\tdo Produto</label><br> <input type=\"number\" name=\"preco\" id=\"preco\"\r\n");
      out.write("\t\t\t\t\t\tplaceholder=\"Digite o preço do produto\" required=\"required\"\r\n");
      out.write("\t\t\t\t\t\tclass=\"form-control\">\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\t\t<label for='imagem'>Imagem do Produto</label><br> <input\r\n");
      out.write("\t\t\t\t\t\ttype=\"text\" name=\"imagem\" id=\"imagem\"\r\n");
      out.write("\t\t\t\t\t\tplaceholder=\"Digite a URL da Imagem\" required=\"required\"\r\n");
      out.write("\t\t\t\t\t\tclass=\"form-control\">\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\t\t<br>\r\n");
      out.write("\t\t\t\t\t<button type=\"submit\" class=\"btn btn-success\">Gravar</button>\r\n");
      out.write("\r\n");
      out.write("\t\t\t</form>\r\n");
      out.write("\t\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("<h3 class=\"text-center text-info bg-light p-5 mt-5\">Tabela dos Produtos</h3>\r\n");
      out.write("\t\r\n");
      out.write("\t<div class=\"container\">\r\n");
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\t<table class=\"mt-5 table table-bordered table-hover table-dark shadow mb-5\">\r\n");
      out.write("\t\t<thead class=\"bg-info\">\r\n");
      out.write("\t\t\t<tr class=\"text-center\">\r\n");
      out.write("\t\t\t\t<th>Id Produto</th>\r\n");
      out.write("\t\t\t\t<th>Nome</th>\r\n");
      out.write("\t\t\t\t<th>Descricao</th>\r\n");
      out.write("\t\t\t\t<th>Preco</th>\r\n");
      out.write("\t\t\t\t<th>Imagem</th>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t</thead>\r\n");
      out.write("\t\t<tbody>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td>10</td>\r\n");
      out.write("\t\t\t\t<td>Havaiana</td>\r\n");
      out.write("\t\t\t\t<td>Não solta as tiras</td>\r\n");
      out.write("\t\t\t\t<td>50.00</td>\r\n");
      out.write("\t\t\t\t<td><img src=\"https://havainas.vteximg.com.br/arquivos/ids/251575-583-439/4000029-5735-A-HAVAIANAS-TOP-LARANJA.jpg\"\r\n");
      out.write("\t\t\t\tclass=\"w-25\"></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t</tbody>\r\n");
      out.write("\t</table>\r\n");
      out.write("</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
